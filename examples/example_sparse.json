// example case using the JSON input file
{
    // specify halo orbit to compute:
    //"period": 1.5872714606,  // normalized period [initial test case]
    // "period":   1.6907637948986587,  // for patch_point_file_is_periapsis = false --> higher orbit ...
    "period":   1.6647057114899595,   // [100 rev solution with no eclipses]

    "N_or_S": "S",
    "L1_or_L2": "L2",

    // reference epoch (all times are relative to this epoch)
    // can specify as calendar date or ET
    // "year": 2000,
    // "month": 1,
    // "day": 1,
    // "hour": 12,
    // "minute": 0,
    // "sec": 0,
     //"et_ref":    710212455.000000,   // 2022-07-04 13:14:15 [initial test case]
    //"et_ref":       710212454.94232786,
    "et_ref":       709622988.34010994, // [100 rev solution with no eclipses]

    // optional inputs:
    "fix_initial_time": false,  // do not allow the initial epoch to vary
    "fix_initial_r": false,
    "fix_ry_at_end_of_rev": 0,
    "fix_final_ry_and_vx": false,

    // integrator tols:
    "rtol": 1.0e-12,
    "atol": 1.0e-12,

    //nlesolver tol:
    //  "nlesolver_tol": 1.0e-6,
    "nlesolver_tol": 1.0e-12,
    // "nlesolver_tol": 1.0e-20,  // use for quad precision

  //  "solver_mode": 1, // dense solver (LAPACK)
  //  "solver_mode": 2, // sparse solver (LSQR)
  //  "solver_mode": 3, // sparse solver (LUSOL)    <----- doesn't seem to work at all ?
  //  "solver_mode": 4, // sparse solver (LMSR)
     "solver_mode": 5, // custom solver (QR_MUMPS)

    // number of revs:
    // "n_revs": 10,
    //"n_revs": 5,
    //"n_revs": 20,
    "n_revs": 100,  //689 days
    //  "n_revs": 1000,

    // data files:
    "use_splined_ephemeris": true,  // precompute a spline of the ephemeris and use that during solving
    "dt_spline_sec": 3600,
    "ephemeris_file": "data/eph/JPLEPH.421",
    "gravfile": "data/grav/gggrx_0020pm_sha.tab",
    "patch_point_file": "data/L2_halos.json",
    "patch_point_file_is_periapsis": false, //true: patch points are periapsis, false: they are apoapsis

    // read initial guess from a previous run
    // "initial_guess_from_file": "solution_20220704131415_L2_S_NREVS=20.json",
    //"initial_guess_from_file": "./100-rev-solution/solution_20220704131413_L2_S_NREVS=100.json",
    //"initial_guess_from_file": "./100-rev-solution-2/solution_20220704131415_L2_S_NREVS=100.html",
    //"initial_guess_from_file": "./solution_20220704131415_L2_S_NREVS=100.json",
    //"initial_guess_from_file": "./solution_20220627172948_L2_S_NREVS=100.json",

    "generate_plots": false,
    "generate_trajectory_files": true,
    "generate_guess_and_solution_files": true,
    "generate_kernel": false,
    "generate_defect_file": true,

    "generate_eclipse_files": true,
    "r_eclipse_bubble": 1.0, // km
    "eclipse_dt_step": 3600.0,
    "eclipse_filetype": 2 // json
}
