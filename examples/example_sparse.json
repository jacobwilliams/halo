// example case using the JSON input file
{
    // specify halo orbit to compute:
    "period": 1.5872714606,  // normalized period
    "N_or_S": "S",
    "L1_or_L2": "L2",

    // reference epoch (all times are relative to this epoch)
    // can specify as calendar date or ET
    // "year": 2000,
    // "month": 1,
    // "day": 1,
    // "hour": 12,
    // "minute": 0,
    // "sec": 0,
    "et_ref": 710212455.000000,  // 2022-07-04 13:14:15

    // optional inputs:
    "fix_initial_time": false,  // do not allow the initial epoch to vary
    "fix_initial_r": false,
    "fix_ry_at_end_of_rev": 0,
    "fix_final_ry_and_vx": false,

  //  "solver_mode": 1, // dense solver (LAPACK)
  //  "solver_mode": 2, // sparse solver (LSQR)
  //  "solver_mode": 3, // sparse solver (LUSOL)    <----- doesn't seem to work at all ?
  //  "solver_mode": 4, // sparse solver (LMSR)
      "solver_mode": 5, // custom solver (QR_MUMPS)

    // number of revs:
    //"n_revs": 10,
    // "n_revs": 5,
    // "n_revs": 20,
    //"n_revs": 100,  //689 days
      "n_revs": 1000,

    // data files:
    "ephemeris_file": "data/eph/JPLEPH.421",
    "gravfile": "data/grav/gggrx_0020pm_sha.tab",
    "patch_point_file": "data/L2_halos.json",

    "generate_plots": true,
    "generate_trajectory_files": true,
    "generate_guess_and_solution_files": true,
    "generate_kernel": true

}
